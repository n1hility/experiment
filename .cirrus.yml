env:
  IMAGE_TAG: 36
build_task:
  alias: 'build'
  compute_engine_instance:
    image_project: fedora-cloud # 
    image: family/fedora-cloud-36 
    platform: linux
    architecture: arm64 
    cpu: 2 
    memory: 4G 
    disk: 100 
  get_script: |
    date >> changes
    podman image pull docker.io/library/fedora:$IMAGE_TAG
    imageDigest=`podman image inspect docker.io/library/fedora:$IMAGE_TAG --format {{.Digest}}`
    echo $imageDigest > lastimage
    lastImage=`curl -L "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/latest/download/lastimage"`
    echo "Digest: $imageDigest"
    echo "Last: $lastImage"
    if [ "$lastImage" != "$imageDigest" ]; then
      echo "Image needs update"
      echo -e "\nImage update:\n $imageDigest\n" >> changes
      echo "IMAGE_CHANGED=1" >> $CIRRUS_ENV
    fi
  reuse_script: |
    if [ "$IMAGE_CHANGED" != "1" ]; then
      echo "Skipped"
    fi
    echo "Reusing cached image"
    curl -L $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/latest/download/rootfs.tar.xz --output rootfs.tar.xz
    unxz rootfs.tar.xz
    podman import rootfs.tar fedora-update
    podman create --name fedora-update fedora-update sleep 7200
  clean_script: |
    if [ "$IMAGE_CHANGED" != "1" ]; then
      echo "Skipped"
    fi
    echo "Using clean image"
    podman create --name fedora-update docker.io/library/fedora:$IMAGE_TAG sleep 7200
  update_script: | 
    podman start fedora-update
    podman exec fedora-update sh -c 'rpm -qa --qf "%-30{name} %{version}-%{release}\n" | sort' > pre-update
    podman exec fedora-update sh -c 'dnf update -y && dnf -y install podman podman-docker procps-ng openssh-server net-tools && dnf clean all && rm -rf /var/cache/yum'
    podman exec fedora-update sh -c 'rpm -qa --qf "%-30{name} %{version}-%{release}\n" | sort' > post-update

    diff -u pre-update post-update > delta || delta=1
    if [ ! -z "$delta" ]; then
      echo "Package changes!"
      echo -e "\nInstalled packages:\n\`\`\`" >> changes
      grep '^+' delta | grep -v '+++' | sed 's/^\+//g' >> changes
      echo "\`\`\`" >> changes
      echo "PACKAGE_CHANGED=1" >> $CIRRUS_ENV
    fi
  archive_script: | 
    if [ "$IMAGE_CHANGED" != "1" ] && [ "$PACKAGE_CHANGED" != 1 ]
      echo "Skipping archive, no updates required"
    fi  
  
    podman export --output rootfs.tar fedora-update
    # GNu tar has a corruption bugs with --delete, so use bsdtar to filter instead
    podman run -v .:/mnt --security-opt label=disable fedora sh -c 'dnf -y install bsdtar && bsdtar -cf /mnt/new.tar --exclude etc/resolv.conf @/mnt/rootfs.tar'
    mv new.tar rootfs.tar
    mkdir -p etc; touch etc/resolv.conf
    tar rf rootfs.tar --mode=644 --group=root --owner=root etc/resolv.conf
    xz rootfs.tar
    ls -l rootfs.tar.xz
    
